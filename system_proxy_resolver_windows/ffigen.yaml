# Run with `flutter pub run ffigen --config ffigen.yaml`.
name: WinHttpBindings
description: |
  Bindings for `Winhttp.h`.

  Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
output: 'lib/src/winhttp.g.dart'
headers:
  entry-points:
    - 'src/system_proxy_resolver_windows.h'
    # Modify this file by adding `#include <windows.h>` before `#include <winapifamily.h>`
    - 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\um\winhttp.h'
compiler-opts:
  - '-Isrc/dart-sdk/runtime/include'
exclude-all-by-default: true
preamble: |
  // ignore_for_file: type=lint
  export 'winhttp_shims.dart';
comments:
  style: any
  length: full
functions:
  include:
    - WinHttpGetIEProxyConfigForCurrentUser
    - WinHttpCloseHandle
    - WinHttpOpen
    - WinHttpCreateProxyResolver
    - WinHttpSetStatusCallback
    - WinHttpGetProxyForUrl
    - WinHttpGetProxyForUrlEx
    - WinHttpGetProxyResult
    - WinHttpFreeProxyResult
    - initializeWinHttpSession
    - freeWinHttpStatusCallbackResult
structs:
  include:
    - _WINHTTP_ASYNC_RESULT
  rename:
    '_(.*)': '$1'
globals:
  include:
    - winHttpStatusCallback
typedefs:
  include:
    - WINHTTP_STATUS_CALLBACK
macros:
  include:
    - 'WINHTTP_.*'
    - ERROR_IO_PENDING
    - API_GET_PROXY_FOR_URL
    - 'INTERNET_SCHEME_.*'
library-imports:
  win32: 'package:win32/win32.dart'
type-map:
  typedefs:
    BOOL:
      lib: win32
      c-type: BOOL
      dart-type: int
  structs:
    _Dart_CObject:
      lib: ffi
      c-type: Dart_CObject
      dart-type: Dart_CObject